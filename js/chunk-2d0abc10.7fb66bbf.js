(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0abc10"],{"172f":function(n,e,t){"use strict";t.r(e),t.d(e,"NetworkWeb",(function(){return a})),t.d(e,"Network",(function(){return c}));var o=t("1547");function i(){const n=window.navigator.connection||window.navigator.mozConnection||window.navigator.webkitConnection;let e="unknown";const t=n?n.type||n.effectiveType:null;if(t&&"string"===typeof t)switch(t){case"bluetooth":case"cellular":e="cellular";break;case"none":e="none";break;case"ethernet":case"wifi":case"wimax":e="wifi";break;case"other":case"unknown":e="unknown";break;case"slow-2g":case"2g":case"3g":e="cellular";break;case"4g":e="wifi";break;default:break}return e}class a extends o["a"]{constructor(){super(),this.handleOnline=()=>{const n=i(),e={connected:!0,connectionType:n};this.notifyListeners("networkStatusChange",e)},this.handleOffline=()=>{const n={connected:!1,connectionType:"none"};this.notifyListeners("networkStatusChange",n)},"undefined"!==typeof window&&(window.addEventListener("online",this.handleOnline),window.addEventListener("offline",this.handleOffline))}async getStatus(){if(!window.navigator)throw this.unavailable("Browser does not support the Network Information API");const n=window.navigator.onLine,e=i(),t={connected:n,connectionType:n?e:"none"};return t}}const c=new a}}]);
//# sourceMappingURL=chunk-2d0abc10.7fb66bbf.js.map